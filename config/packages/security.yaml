security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        main:
            pattern: ^/$
            anonymous: true
        
        login:
            pattern:  ^/api/login
            user_checker: App\Security\UserChecker
            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path:  /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        refresh:
            pattern:  ^/api/token/refresh
            user_checker: App\Security\UserChecker
            stateless: true
            anonymous: true
        api:
            pattern:   ^/api
            user_checker: App\Security\UserChecker
            stateless: true
            access_denied_handler: App\Security\AccessDeniedHandler
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        admin:
            pattern:   ^/admin
            user_checker: App\Security\UserChecker
            stateless: true
            access_denied_handler: App\Security\AccessDeniedHandler
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/$,                      roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login,              roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh,      roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/admin,              roles: ROLE_ADMIN }
        - { path: ^/admin,                  roles: ROLE_ADMIN }
        - { path: ^/api,                    roles: IS_AUTHENTICATED_FULLY }

